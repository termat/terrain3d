{"version":3,"sources":["RenderLayers.js","App.js","index.js"],"names":["ELEVATION_DECODER","rScaler","gScaler","bScaler","offset","ambientLight","require","AmbientLight","color","intensity","dirLight","SunLight","timestamp","Date","UTC","_shadow","App","useState","width","window","innerWidth","height","innerHeight","latitude","longitude","zoom","minZoom","maxZoom","bearing","pitch","maxPitch","viewport","setViewport","lightingEffect","LightingEffect","shadowColor","useEffect","handleResize","v","addEventListener","removeEventListener","layers","TerrainLayer","id","strategy","elevationDecoder","elevationData","texture","wireframe","MVTLayer","data","getLineColor","getFillColor","lineWidthMinPixels","extruded","filled","getElevation","d","properties","measuredHeight","dem","initialViewState","controller","className","href","target","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"+TAKMA,EAAoB,CACxBC,QAAS,OACTC,QAAS,KACTC,QAAS,GACTC,QAAS,K,YCMLC,GAHQC,EAAQ,KAGD,IAAIC,IAAa,CACpCC,MAAO,CAAC,IAAK,IAAK,KAClBC,UAAW,OAGPC,EAAW,IAAIC,IAAS,CAC5BC,UAAWC,KAAKC,IAAI,KAAM,EAAG,EAAG,IAChCN,MAAO,CAAC,IAAK,IAAK,KAClBC,UAAW,EACXM,SAAS,IA0GIC,EArDH,WACV,MAAgCC,mBAAS,CACvCC,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,YACfC,SAAU,MACVC,UAAW,OACXC,KAAM,GACNC,QAAQ,GACRC,QAAQ,GACRC,QAAS,EACTC,MAAO,GACPC,SAAU,KAVZ,mBAAOC,EAAP,KAAiBC,EAAjB,KAaA,EAAkBf,oBAAS,WACzB,IAAMgB,EAAiB,IAAIC,IAAe,CAAE7B,eAAcK,aAE1D,OADAuB,EAAeE,YAAc,CAAC,EAAG,EAAG,EAAG,IAChC,CAACF,MAHV,oBAsBA,OAfAG,qBAAU,WACR,IAAMC,EAAe,WACnBL,GAAY,SAACM,GACX,OAAO,2BACFA,GADL,IAEEpB,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,kBAMrB,OAFAe,IACAlB,OAAOoB,iBAAiB,SAAUF,GAC3B,kBAAMlB,OAAOqB,oBAAoB,SAAUH,MACjD,IAGD,qCACE,cAAC,IAAD,CACEI,OAAQ,CD3FP,CAZO,IAAIC,IAAa,CAC7BC,GAAI,UACJjB,QAAS,EACTC,QAAS,GACTiB,SAAU,aACVC,iBAAkB7C,EAClB8C,cAjBe,yCAkBfC,QAjBkB,qEAkBlBC,WAAW,EACXxC,MAAO,CAAC,EAAG,EAAG,MCqBT,CAfO,IAAIyC,IAAS,CACzBN,GAAG,MACHO,KAAK,4CACLxB,QAAS,GACTC,QAAS,GACTwB,aAAc,CAAC,IAAK,IAAK,KACzBC,aAAc,CAAC,IAAK,IAAK,KACzBC,mBAAoB,EACpBC,UAAU,EACVN,WAAW,EACXO,QAAQ,EACRC,aAAc,SAAsBC,GAClC,OAAOA,EAAEC,WAAWC,eAAeF,EAAEC,WAAWE,SA8E9CC,iBAAkB9B,EAClB+B,YAAY,IAEd,sBAAKC,UAAU,cAAf,UACE,mBAAGC,KAAK,kDAAkDC,OAAO,SAAjE,uDAEK,WCrHPC,G,OAAcC,SAASC,eAAe,SAC5CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,K","file":"static/js/main.5b6332fe.chunk.js","sourcesContent":["import { TerrainLayer } from \"deck.gl\";\r\n\r\nconst TERRAIN_IMAGE = `https://www.termat.net/dem/{z}/{x}/{y}`;\r\nconst SURFACE_IMAGE = 'https://cyberjapandata.gsi.go.jp/xyz/seamlessphoto/{z}/{x}/{y}.jpg';\r\n\r\nconst ELEVATION_DECODER = {\r\n  rScaler: 6553.6,\r\n  gScaler: 25.6,\r\n  bScaler: 0.1,\r\n  offset: -10000\r\n};\r\n\r\nexport function renderLayers(props) {\r\n  const layer = new TerrainLayer({\r\n    id: \"terrain\",\r\n    minZoom: 0,\r\n    maxZoom: 15,\r\n    strategy: \"no-overlap\",\r\n    elevationDecoder: ELEVATION_DECODER,\r\n    elevationData: TERRAIN_IMAGE,\r\n    texture: SURFACE_IMAGE,\r\n    wireframe: false,\r\n    color: [0, 0, 0]\r\n  });\r\n\r\n  return [layer];\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport DeckGL from \"deck.gl\";\nimport { Tile3DLayer } from \"deck.gl\";\nimport { Vector3 } from 'math.gl';\nimport {\n  LightingEffect,\n  AmbientLight,\n  _SunLight as SunLight\n} from \"@deck.gl/core\";\nimport {MVTLayer} from '@deck.gl/geo-layers';\nimport { renderLayers } from \"./RenderLayers\";\n\nvar _dTiles = require(\"@loaders.gl/3d-tiles\");\nvar count = 0;\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.5\n});\n\nconst dirLight = new SunLight({\n  timestamp: Date.UTC(2019, 7, 1, 23),\n  color: [255, 255, 255],\n  intensity: 3.0,\n  _shadow: true\n});\n\nconst mvt=()=>{\n  const layer = new MVTLayer({\n    id:\"mvt\",\n    data: `http://localhost:3000/pbf/{z}/{x}/{y}.pbf`,\n    minZoom: 12,\n    maxZoom: 16,\n    getLineColor: [192, 192, 192],\n    getFillColor: [140, 170, 180],\n    lineWidthMinPixels: 1,\n    extruded: true,\n    wireframe: false,\n    filled: true,\n    getElevation: function getElevation(d) {\n      return d.properties.measuredHeight+d.properties.dem;\n    }\n  });\n  return [layer];\n};\n\n\nconst t3=()=>{\n  var tile3dLayer = new Tile3DLayer({\n    id: \"tile3dlayer\" + count,\n    pointSize: 1,\n    pickable: true,\n    data: \"27128_chuo-ku/tileset.json\",\n    loader: _dTiles.Tiles3DLoader,\n    onClick: function onClick(d) {},\n    onTilesetLoad: function onTilesetLoad(tileset) {\n\n    },\n    onTileLoad: function onTileLoad(tileHeader) {\n      tileHeader.content.cartographicOrigin = new Vector3(\n        tileHeader.content.cartographicOrigin.x,\n        tileHeader.content.cartographicOrigin.y,\n        tileHeader.content.cartographicOrigin.z - 35,\n      );\n\n      tileHeader.content.gltf.materials.forEach(function (m) {\n        if (m.name === \"default_material\") {\n          m.pbrMetallicRoughness.baseColorFactor = [0.0, 1, 0, 0.8];\n          m.pbrMetallicRoughness.metallicFactor = 1;\n          m.pbrMetallicRoughness.roughnessFactor = 0.6;\n        }\n      });\n    }\n  });\n  return [tile3dLayer];\n};\n\nconst App = () => {\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    latitude: 34.79,\n    longitude: 135.35,\n    zoom: 15.0,\n    minZoom:12.0,\n    maxZoom:18.0,\n    bearing: 0,\n    pitch: 65,\n    maxPitch: 89\n  });\n\n  const [effects] = useState(() => {\n    const lightingEffect = new LightingEffect({ ambientLight, dirLight });\n    lightingEffect.shadowColor = [0, 0, 0, 0.5];\n    return [lightingEffect];\n  });\n\n  //resize\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport((v) => {\n        return {\n          ...v,\n          width: window.innerWidth,\n          height: window.innerHeight\n        };\n      });\n    };\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <>\n      <DeckGL\n        layers={[renderLayers(),mvt()]}\n//        effects={effects}\n        initialViewState={viewport}\n        controller={true}\n      />\n      <div className=\"attribution\">\n        <a href=\"https://maps.gsi.go.jp/development/ichiran.html\" target=\"_blank\">\n          © 地理院タイル\n        </a>{\" \"}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}